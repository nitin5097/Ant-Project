[{"C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\index.tsx":"1","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\reportWebVitals.ts":"2","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\App.tsx":"3","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\login\\login.tsx":"4","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\home\\home.tsx":"5","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\signup\\signup.tsx":"6","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\campaign\\campaign.tsx":"7","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\campaignDetail\\campaignDetail.tsx":"8","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\result\\result.tsx":"9","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\campaign status\\campaign status.tsx":"10","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\reports\\reports.tsx":"11","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\components\\menuComponent.tsx":"12","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\components\\headerComponent.tsx":"13","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\components\\footerComponent.tsx":"14","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\components\\contentComponent.tsx":"15","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\analyze\\analyze.tsx":"16"},{"size":548,"mtime":1608609349610,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1607482545595,"results":"19","hashOfConfig":"18"},{"size":1774,"mtime":1611561483249,"results":"20","hashOfConfig":"18"},{"size":3114,"mtime":1611561212871,"results":"21","hashOfConfig":"18"},{"size":593,"mtime":1610690603297,"results":"22","hashOfConfig":"18"},{"size":4060,"mtime":1607592275544,"results":"23","hashOfConfig":"18"},{"size":46112,"mtime":1611196925807,"results":"24","hashOfConfig":"18"},{"size":13978,"mtime":1611020998327,"results":"25","hashOfConfig":"18"},{"size":5276,"mtime":1610601824643,"results":"26","hashOfConfig":"18"},{"size":10672,"mtime":1611116395491,"results":"27","hashOfConfig":"18"},{"size":5822,"mtime":1611021362197,"results":"28","hashOfConfig":"18"},{"size":2042,"mtime":1611561508847,"results":"29","hashOfConfig":"18"},{"size":2819,"mtime":1611561463780,"results":"30","hashOfConfig":"18"},{"size":1358,"mtime":1610680492317,"results":"31","hashOfConfig":"18"},{"size":1307,"mtime":1610691645684,"results":"32","hashOfConfig":"18"},{"size":5113,"mtime":1611193446690,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1484c8s",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\index.tsx",[],["72","73"],"C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\reportWebVitals.ts",[],"C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\App.tsx",[],"C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\login\\login.tsx",["74","75","76"],"C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\home\\home.tsx",[],"C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\signup\\signup.tsx",["77"],"import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport { Image } from \"antd\";\nimport \"./signup.scss\";\nimport homeImage from \"../../Image/home.png\";\n\nconst onFinish = (values: any) => {\n  console.log(\"Received values of form: \", values);\n};\n\nconst layout = {\n  wrapperCol: { offset: 12, span: 16 },\n};\n\nfunction redirectLogin(key: any) {\n  console.log(key);\n}\nfunction Signup() {\n  return (\n    <div>\n      <div className=\"login\"></div>\n      <Row>\n        <Col span={12}>\n          <div className=\"catalinaImage\">\n            <div>\n              <Image width={850} height={600} src={homeImage} />\n            </div>\n          </div>\n        </Col>\n        <Col span={12}>\n          <br></br>\n          <br></br>\n          <div style={{ textAlign: \"center\", fontSize: \"xx-large\" }}>\n            WELCOME TO CATALINA\n          </div>\n          <br></br>\n          <div style={{ textAlign: \"center\", fontSize: \"large\" }}>\n            Join our community\n          </div>\n\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <Form\n            {...layout}\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <Form.Item\n              name=\"username\"\n              rules={[\n                { required: true, message: \"Please input your Username!\" },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Username\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"email\"\n              rules={[\n                {\n                  type: \"email\",\n                  message: \"The input is not valid E-mail!\",\n                },\n                {\n                  required: true,\n                  message: \"Please input your E-mail!\",\n                },\n              ]}\n            >\n              <Input\n                prefix={<MailOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Email ID\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your Password!\" },\n              ]}\n            >\n              <Input.Password \n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"confirm\"\n              dependencies={[\"password\"]}\n              hasFeedback\n              rules={[\n                {\n                  required: true,\n                  message: \"Please confirm your password!\",\n                },\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    if (!value || getFieldValue(\"password\") === value) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\n                      \"The two passwords that you entered do not match!\"\n                    );\n                  },\n                }),\n              ]}\n            >\n              <Input.Password\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n              />\n            </Form.Item>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                onClick={redirectLogin}\n              >\n                Continue\n              </Button>\n              <a href=\"/login\">Already have an account?</a>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Signup;\n","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\campaign\\campaign.tsx",["78"],"import React from \"react\";\nimport { Image } from \"antd\";\nimport { Col, Row } from \"antd\";\nimport \"./campaign.scss\";\nimport { Select, Cascader } from \"antd\";\nimport { Collapse } from \"antd\";\nimport { DatePicker, Space } from \"antd\";\nimport { InputNumber } from \"antd\";\nimport { Button } from \"antd\";\nimport { Radio } from \"antd\";\nimport { Checkbox, Tooltip } from \"antd\";\nimport { Layout } from \"antd\";\nimport { Tabs } from \"antd\";\nimport barCodeImage from \"../../Image/barcode_plain.jpg\";\nimport { Modal } from 'antd';\nimport MenuComponent from \"../components/menuComponent\";\nimport HeaderComponent from \"../components/headerComponent\";\nimport FooterComponent from \"../components/footerComponent\";\n\nimport {\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Form, Input} from 'antd';\nimport { Upload } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { Width } from \"devextreme-react/chart\";\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nconst { RangePicker } = DatePicker;\nconst { TabPane } = Tabs;\nconst { Option } = Select;\nconst { Content } = Layout;\nconst { Panel } = Collapse;\n\nfunction formatDate(date: string | number | Date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n      return `${year}年 ${month}月 ${day}日`;\n}\n\nconst areaData = [\n  {\n    value: \"ABC\",\n    label: \"ABC\",\n    children: [\n      {\n        value: \"Store 1\",\n        label: \"Store 1\",\n      },\n      {\n        value: \"Store 2\",\n        label: \"Store 2\",\n      },\n    ],\n  },\n  {\n    value: \"XYZ\",\n    label: \"XYZ\",\n    children: [\n      {\n        value: \"Store 3\",\n        label: \"Store 3\",\n      },\n      {\n        value: \"Store 4\",\n        label: \"Store 4\",\n      },\n    ],\n  },\n];\n\nconst productData = [\n  {\n    value: \"Bread\",\n    label: \"Bread\",\n    children: [\n      {\n        value: \"White Bread\",\n        label: \"White Bread\",\n      },\n      {\n        value: \"Brown Bread\",\n        label: \"Brown Bread\",\n      },\n    ],\n  },\n  {\n    value: \"Beer\",\n    label: \"Beer\",\n    children: [\n      {\n        value: \"Suntory\",\n        label: \"Suntory\",\n      },\n      {\n        value: \"Asahi\",\n        label: \"Asahi\",\n      },\n    ],\n  },\n];\n\nconst { confirm } = Modal;\n\nfunction showConfirm() {\n  confirm({\n    title: 'Do you want to submit the request to create a Campaign?',\n    icon: <ExclamationCircleOutlined />,\n    content: 'A new Campaign will be created after confirming',\n    onOk() {\n      console.log('OK');\n      window.location.href = \"/result\";\n    },\n    onCancel() {\n      console.log('Cancel');\n    },\n  });\n}\n\nfunction onCascaderChange(value: any) {\n  console.log(value);\n}\n\nfunction onChange(date: any, dateString: any) {\n  console.log(date, dateString);\n}\n\nfunction handleChange(value: any) {\n  console.log(`selected ${value}`);\n}\n\nfunction callback(key: any) {\n  console.log(key);\n}\n\nfunction onChangeNumber(value: any) {\n  console.log(\"changed\", value);\n}\n\ninterface HomeProps {\n  message: string;\n  name: string;\n  isLoggedIn: boolean;\n}\n\nlet kpiListData = {\n  kpiType: \"Choose KPIs\",\n  options: [\n    \"Print Budget\",\n    \"Redemption Budget\",\n    \"Total Budget\",\n    \"Redemption Contribution\",\n    \"Trail\",\n  ],\n};\n\nlet campaignTypeData = {\n  campaignType: \"Choose Campaign type\",\n  options: [\"In-Store\", \"Digital\"],\n};\n\nlet campaignListData = {\n  campaignList: \"Choose Existing Campaigns\",\n  options: [\"Cmp_Jan_01\", \"Cmp_Apr_01\", \"Cmp_Aug_01\", \"Cmp_Dec_01\"],\n};\n\nlet campaignCategoryData = {\n  campaignCategory: \"Choose Campaign Category\",\n  options: [\"Bread\", \"Onigiri\", \"Beer\", \"Wine\"],\n};\n\nlet breadCategoryData = {\n  campaignCategory: \"Choose Campaign Category\",\n  options: [\"White-Bread\", \"Brown-Bread\", \"Crossiant\"],\n};\n\nlet campaignTypologyData = {\n  metadata: {\n    typology: [\n      {\n        category: \"Principal\",\n        options: [\n          \"Volumes\",\n          \"Incremental Volumes\",\n          \"Trials\",\n          \"Incremental Trials\",\n          \"Mix\",\n        ],\n      },\n      {\n        category: \"Secondary\",\n        options: [\n          \"Frequency\",\n          \"Unit/Trips\",\n          \"Unit/Shopper\",\n          \"Retention\",\n          \"New Buyer\",\n        ],\n      },\n    ],\n  },\n};\nfunction Campaign(props: HomeProps) {\n\n  const [form] = Form.useForm();\n\n  const printCategory = (value: string) => {\n    switch (value) {\n      case \"White-Bread\":\n        form.setFieldsValue({ brandCategory: \"White Bread\" });\n        return;\n      case \"Brown-Bread\":\n        form.setFieldsValue({ brandCategory: \"Brown Bread\" });\n        return;\n      case \"Crossiant\":\n        form.setFieldsValue({ brandCategory: \"Crossiant\" });\n        return;\n    }\n  };\n\n  const onCheckChange = (value: any) => {\n    console.log(\"checked = \", value);\n    switch (value[0]) {\n      case \"Print Budget\":\n        form.setFieldsValue({ printBudget: false });\n        return;\n    }\n  }\n\n  const fillBrand = (e: any) => {\n    form.setFieldsValue({ brandName: e.target.value });\n  };\n\n  const onPrintNumber = (e: any) => {\n    form.setFieldsValue({ discountPrice: \"¥ \" + e + \" Off\" });\n  };\n\n  const imageUpload = (e: any) => {\n    form.setFieldsValue({ brandImage: e.thumbUrl });\n  };\n\n  const onFinish = (values: any) => {\n    console.log(values);\n    showConfirm();\n  };\n\n  return (\n    <Layout>\n      <MenuComponent/>\n      <Layout>\n      <HeaderComponent isLoggedIn={true} message={\"Welcome\"} name={\"Admin\"}/>\n        <Content style={{ margin: \"24px 16px 0\" }}>\n          <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 660 }}\n          >\n            <Form\n                  {...layout}\n                  form={form}\n                  name=\"control-hooks\"\n                  onFinish={onFinish}\n                  initialValues={{ \n                    campaignType:\"In-Store\",\n                    campaignList:\"Cmp_Jan_01\",\n                    campaignCategory:\"Bread\",\n                    Principal:\"Volumes\",\n                    Secondary:\"Frequency\",\n                    transactionBased:\"a\",\n                    cardBased:\"a\",\n                    mixedBased1:\"a\",\n                    mixedBased2:\"a\",\n                    mixedBased3:\"a\",\n                    designBreadCategory:\"White-Bread\"\n                   }}\n                >\n            <div>\n              <Collapse defaultActiveKey={[\"1\"]} onChange={callback}>\n                <Panel header=\"Choose Campaign Industrial and cycle\" key=\"1\">\n                  <div className=\"site-card-wrapper\">\n                    <Row gutter={16}>\n                      <Col span={6}>\n                        <div>\n                          <label>{campaignTypeData.campaignType}</label>\n                        </div>\n                        <div>\n                        <Form.Item \n                        name=\"campaignType\"\n                       >\n                          <Select\n                            style={{ width: 120 }}\n                            onChange={handleChange}\n                          >\n                            {campaignTypeData.options.map((answer) => {\n                              return (\n                                <Option key={answer} value={answer}>\n                                  {answer}\n                                </Option>\n                              );\n                            })}\n                          </Select>\n                          </Form.Item>\n                        </div>\n                      </Col>\n                      <Col span={6}>\n                        <div>\n                          <label>{campaignListData.campaignList}</label>\n                        </div>\n                        <div>\n                        <Form.Item \n                        name=\"campaignList\"\n                       >\n                          <Select\n                            style={{ width: 120 }}\n                            onChange={handleChange}\n                          >\n                            {campaignListData.options.map((answer) => {\n                              return (\n                                <Option key={answer} value={answer}>\n                                  {answer}\n                                </Option>\n                              );\n                            })}\n                          </Select>\n                          </Form.Item>\n                        </div>\n                      </Col>\n                      <Col span={6}>\n                        <div>\n                          <label>{campaignCategoryData.campaignCategory}</label>\n                        </div>\n                        <div>\n                        <Form.Item \n                        name=\"campaignCategory\"\n                       >\n                          <Select\n                            style={{ width: 120 }}\n                            onChange={handleChange}\n                          >\n                            {campaignCategoryData.options.map((answer) => {\n                              return (\n                                <Option key={answer} value={answer}>\n                                  {answer}\n                                </Option>\n                              );\n                            })}\n                          </Select>\n                          </Form.Item>\n                        </div>\n                      </Col>\n                    </Row>\n                    <br></br>\n                    <Row gutter={16}>\n                      <Col span={12}>\n                        <div>Campaign Execution Date</div>\n                      </Col>\n                      \n                      <Col span={6}>\n                        <div>\n                          <label>Discount Amount (In JPY)</label>\n                        </div>\n                      </Col>\n                      <Col span={6}></Col>\n                    </Row>\n                    <Row gutter={16}>\n                      <Col span={12}>\n                      <Form.Item \n                        name=\"campaignDateRange\"\n                        rules={[\n                          { required: true, message: \"Please input the Dates!\" },\n                        ]}\n                        >\n                                <RangePicker onChange={onChange} style={{width:\"340px\"}}/>\n                                </Form.Item>\n                       </Col>\n                      <Col span={6}>\n                        <div>\n                        <Form.Item \n                        name=\"discount\"\n                        rules={[\n                          { required: true, message: \"Please input Discount amount!\" },\n                        ]}>\n                          <InputNumber\n                            min={0}\n                            max={10000}\n                            step={10}\n                            onChange={onChangeNumber}\n                          />\n                          </Form.Item>\n                        </div>\n                      </Col>\n                      <Col span={2}></Col>\n                      <Col span={2}>\n                      </Col>\n                    </Row>\n                  </div>\n                </Panel>\n                <Panel header=\"Choose Campaign Typology\" key=\"2\">\n                  <div>\n                    {campaignTypologyData.metadata.typology.map(\n                      (categories) => {\n                        return (\n                          <div>\n                            \n                            <br></br>\n                            <Row gutter={24}>\n                              <Col span={20}>\n                                <div>\n                                  <label>{categories.category}</label>\n                                </div>\n                                <Form.Item \n                        name={categories.category}\n                       >\n                                <Radio.Group\n                                  buttonStyle=\"solid\"\n                                  key={categories.category}\n                                  name={categories.category}\n                                >\n                                  {categories.options.map((option) => {\n                                    return (\n                                      <Radio.Button value={option}>\n                                        {option}\n                                      </Radio.Button>\n                                    );\n                                  })}\n                                </Radio.Group>\n                                </Form.Item>\n                              </Col>\n                              {/* {categories.category === \"Secondary\" && (\n                                <Col span={24}>\n                                  </Col>\n                              )} */}\n                            </Row>\n                            \n                          </div>\n                        );\n                      }\n                    )}\n                  </div>\n                </Panel>\n                <Panel header=\"Print Trigger\" key=\"3\">\n                  <div>\n                    <Tabs defaultActiveKey=\"1\">\n                      <TabPane\n                        tab={\n                          <span>\n                            Fixed Format\n                          </span>\n                        }\n                        key=\"1\"\n                      >\n                        <Tabs defaultActiveKey=\"1\">\n                          <TabPane\n                            tab={\n                              <span>\n                                Transaction based\n                              </span>\n                            }\n                            key=\"1\"\n                          >\n                            <div>\n                            <Form.Item \n                        name=\"transactionBased\"\n                        >\n                              <Radio.Group name=\"transactionBased\" buttonStyle=\"solid\">\n                                <Space>\n                                  <Radio.Button value=\"a\">Repeat</Radio.Button>\n                                  <Radio.Button value=\"b\">Related</Radio.Button>\n                                </Space>\n                              </Radio.Group>\n                              </Form.Item>\n                            </div>\n                          </TabPane>\n                          <TabPane\n                            tab={\n                              <span>\n                                Card based\n                              </span>\n                            }\n                            key=\"2\"\n                          >\n                            <div>\n                            <Form.Item \n                        name=\"cardBased\"\n                        >\n                              <Radio.Group name=\"cardBased\" buttonStyle=\"solid\">\n                                <Space>\n                                  <Radio.Button value=\"a\">Heavy</Radio.Button>\n                                  <Radio.Button value=\"b\">Middle</Radio.Button>\n                                  <Radio.Button value=\"c\">Light</Radio.Button>\n                                </Space>\n                              </Radio.Group>\n                              </Form.Item>\n                            </div>\n                          </TabPane>\n                          <TabPane\n                            tab={\n                              <span>\n                                Mixed based\n                              </span>\n                            }\n                            key=\"3\"\n                          >\n                            <div>\n                            <Form.Item \n                        name=\"mixedBased1\"\n                        >\n                              <Radio.Group name=\"mixedBased1\" buttonStyle=\"solid\">\n                                <Space>\n                                  <Radio.Button value=\"a\">Repeat</Radio.Button>\n                                  <Radio.Button value=\"b\">Related</Radio.Button>\n                                </Space>\n                              </Radio.Group>\n                              </Form.Item>\n                            </div>\n                            <br />\n                            <div>\n                            <Form.Item \n                        name=\"mixedBased2\"\n                        >\n                              <Radio.Group name=\"mixedBased2\" buttonStyle=\"solid\">\n                                <Space>\n                                  <Radio.Button value=\"a\">Heavy</Radio.Button>\n                                  <Radio.Button value=\"b\">Middle</Radio.Button>\n                                  <Radio.Button value=\"c\">Light</Radio.Button>\n                                </Space>\n                              </Radio.Group>\n                              </Form.Item>\n                            </div>\n                            <br />\n                            <div>\n                            <Form.Item \n                        name=\"mixedBased3\"\n                        >\n                              <Radio.Group name=\"mixedBased3\" buttonStyle=\"solid\">\n                                <Space>\n                                  <Radio.Button value=\"a\">Did Buy</Radio.Button>\n                                  <Radio.Button value=\"b\">\n                                    Didn't Buy\n                                  </Radio.Button>\n                                </Space>\n                              </Radio.Group>\n                              </Form.Item>\n                            </div>\n                          </TabPane>\n                        </Tabs>\n                      </TabPane>\n                      <TabPane\n                        tab={\n                          <span>\n                            Free Format\n                          </span>\n                        }\n                        key=\"2\"\n                      >\n                        <div className=\"site-card-wrapper\">\n                          <Row gutter={16}>\n                            <Col span={8}>\n                              <div>\n                                <label>Period</label>\n                              </div>\n                              <div>\n                              <Form.Item \n                        name=\"extractByDateRange\"\n                        >\n                                <RangePicker onChange={onChange} />\n                                </Form.Item>\n                              </div>\n                            </Col>\n                            <Col span={8}>\n                              <div>\n                                <label>Store</label>\n                              </div>\n                              <div>\n                              <Form.Item \n                        name=\"extractByStore\"\n                        >\n                                <Cascader\n                                  options={areaData}\n                                  onChange={onCascaderChange}\n                                  placeholder=\"Please Select the Store\"\n                                  changeOnSelect\n                                />\n                                </Form.Item>\n                              </div>\n                            </Col>\n                            <Col span={8}>\n                              <div>\n                                <label>Customer</label>\n                              </div>\n                              <div>\n                              \n                                <Space>\n                                <Form.Item \n                        name=\"extractByCustomerGender\"\n                        >\n                                  <Select\n                                    placeholder=\"Gender\"\n                                    onChange={onChange}\n                                    style={{ width: 100 }}\n                                  >\n                                    <Option value=\"male\">Male</Option>\n                                    <Option value=\"female\">Female</Option>\n                                    <Option value=\"other\">Other</Option>\n                                  </Select>\n                                  </Form.Item>\n                                  <Form.Item \n                        name=\"extractByCustomerAge\"\n                        >\n                                  <Select\n                                    placeholder=\"Age\"\n                                    onChange={onChange}\n                                    style={{ width: 100 }}\n                                  >\n                                    <Option value=\"1\">1-5</Option>\n                                    <Option value=\"6\">6-10</Option>\n                                    <Option value=\"11\">11-15</Option>\n                                    <Option value=\"16\">16-20</Option>\n                                    <Option value=\"21\">21-25</Option>\n                                    <Option value=\"26\">26-30</Option>\n                                  </Select>\n                                  </Form.Item>\n                                </Space>\n                              </div>\n                            </Col>\n                            </Row>\n                            <br/>\n                            <Row gutter={16}>\n                            <Col span={8}>\n                              <div>\n                                <label>Product</label>\n                              </div>\n                              <div>\n                                <Space>\n                                <Form.Item \n                        name=\"extractByProduct\"\n                        >\n                                <Cascader\n                                  options={productData}\n                                  onChange={onCascaderChange}\n                                  placeholder=\"Product Category\"\n                                  changeOnSelect\n                                />\n                                </Form.Item>\n                                <Form.Item \n                        name=\"extractByMinProduct\"\n                        >\n                                <InputNumber\n                                placeholder=\"Min\"\n                                  min={0}\n                                  max={1000}\n                                  step={1}\n                                  onChange={onChangeNumber}\n                                />\n                                </Form.Item>\n                                ~\n                                <Form.Item \n                        name=\"extractByMaxProduct\"\n                        >\n                                <InputNumber\n                                placeholder=\"Max\"\n                                  min={0}\n                                  max={1000}\n                                  step={1}\n                                  onChange={onChangeNumber}\n                                />\n                                </Form.Item>\n                                </Space>\n                              </div>\n                            </Col>\n                          </Row>\n                          <br/>\n                        </div>\n                      </TabPane>\n                    </Tabs>\n                    {/* <div className=\"home\">\n                      <Space>\n                        <Button\n                          type=\"primary\"\n                          style={{ verticalAlign: \"End\", width: 80 }}\n                        >\n                          Previous\n                        </Button>\n                        <Button\n                          type=\"primary\"\n                          style={{ verticalAlign: \"End\", width: 80 }}\n                        >\n                          Next\n                        </Button>\n                      </Space>\n                    </div> */}\n                  </div>\n                </Panel>\n                <Panel header=\"Coupon Design\" key=\"4\">\n                <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 660 }}\n          >\n            <div className=\"site-card-wrapper\">\n              <Row gutter={16}>\n                <Col span={6}>\n                  <label>Brand Name</label>\n                </Col>\n                <Col span={6}>\n                  <label>Brand Category</label>\n                </Col>\n                <Col span={6}>\n                  <label>Discount Price in JPY</label>\n                </Col>\n                <Col span={6}>\n                  <label>Please Upload Campaign Print</label>\n                </Col>\n              </Row>\n              <br />\n              <Row gutter={16}>\n                <Col span={4}>\n                  <div>\n                    <Tooltip title=\"Enter the Brand name\">\n                    <Form.Item \n                        name=\"designBrandName\"\n                        rules={[\n                          { required: true, message: \"Please input Brand Name!\" },\n                        ]}>\n                      <Input placeholder=\"Brand Name\" onChange={fillBrand} />\n                      </Form.Item>\n                    </Tooltip>\n                  </div>\n                </Col>\n                <Col span={2} />\n                <Col span={6}>\n                  <div>\n                  <Form.Item \n                        name=\"designBreadCategory\"\n                        >\n                    <Select\n                      // defaultValue={breadCategoryData.options[0]}\n                      style={{ width: 120 }}\n                      onChange={printCategory}\n                    >\n                      {breadCategoryData.options.map((answer) => {\n                        return (\n                          <Option key={answer} value={answer}>\n                            {answer}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                    </Form.Item>\n                  </div>\n                </Col>\n                <Col span={6}>\n                  <div>\n                  <Form.Item \n                        name=\"designDiscount\"\n                        rules={[\n                          { required: true, message: \"Please input Discount!\" },\n                        ]}>\n                    <InputNumber\n                      min={0}\n                      max={10000}\n                      step={10}\n                      onChange={onPrintNumber}\n                    />\n                    </Form.Item>\n                  </div>\n                </Col>\n                <Col span={6}>\n                <Form.Item \n                        name=\"designImageUpload\"\n                        rules={[\n                          { required: true, message: \"Please upload the image!\" },\n                        ]}>\n                  <Space\n                    direction=\"vertical\"\n                    style={{ width: \"100%\" }}\n                    size=\"large\"\n                  >\n                    <Upload\n                      action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                      listType=\"picture\"\n                      onPreview={imageUpload}\n                    >\n                      <Button icon={<UploadOutlined />}>\n                        Please upload the image\n                      </Button>\n                    </Upload>\n                  </Space>\n                  </Form.Item>\n                </Col>\n              </Row>\n              <br />\n              <div title=\"Coupon Design\" style={{ fontSize: \"20px\" }}>\n                Coupon design\n              </div>\n              <br />\n              <div\n                title=\"Coupon Design\"\n                style={{\n                  border: \"groove\",\n                  fontSize: \"20px\",\n                  width: \"60%\",\n                  height: \"260px\",\n                }}\n              >\n                \n                  <Row gutter={26}>\n                    <Col span={8}>\n                      <Form.Item\n                        style={{ fontSize: \"30px\", paddingLeft: \"10px\" , paddingTop: \"10px\" }}\n                        name=\"brandName\"\n                      >\n                        <Input style={{ width: \"200px\",fontSize: \"25px\", color:\"red\"}} />\n                      </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                      <Form.Item\n                        style={{ fontSize: \"30px\", paddingLeft: \"20px\", paddingTop: \"10px\" }}\n                        name=\"brandCategory\"\n                      >\n                        <Input style={{ width: \"150px\", fontSize: \"20px\"}} />\n                      </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                      <Form.Item\n                        style={{ fontSize: \"30px\", paddingLeft: \"10px\" }}\n                      >\n                        <label style={{ width: \"200px\", fontSize: \"13px\",  color:\"grey\",\n                            fontWeight:\"bolder\", paddingLeft: \"10px\"\n                            }}>\n                          {formatDate(new Date())}\n                        </label>\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                  <Row gutter={26}>\n                    <Col span={8}>\n                      <Form.Item\n                        style={{ fontSize: \"30px\", paddingLeft: \"10px\" }}\n                        name=\"brandImage\"\n                        valuePropName=\"src\"\n                      >\n                        <Image\n                          style={{ height: \"140px\", width: \"200px\" }}\n                        ></Image>\n                      </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                      <Row>\n                        <label style={{ width: \"200px\", paddingLeft: \"30px\" }}>\n                          XXXXXXXXXXXXX\n                        </label>\n                      </Row>\n                      <Row>\n                        <Form.Item\n                          style={{ fontSize: \"30px\", paddingLeft: \"20px\" }}\n                          name=\"discountPrice\"\n                        >\n                          <Input style={{ width: \"150px\", fontSize: \"25px\"}}></Input>\n                        </Form.Item>\n                      </Row>\n                      <Row>\n                        <label style={{ width: \"200px\", paddingLeft: \"30px\" }}>\n                          XXXXXXXXXXXXX\n                        </label>\n                      </Row>\n                    </Col>\n                    <Col span={8}>\n                      <Row>\n                        <label\n                          style={{\n                            width: \"180px\",\n                            fontSize: \"20px\",\n                            paddingLeft: \"10px\",\n                            color:\"grey\",\n                            fontWeight:\"bolder\"\n                          }}\n                        >\n                          Checkout Markets\n                        </label>\n                      </Row>\n                      <Row>\n                        <Form.Item\n                          style={{ fontSize: \"30px\", paddingLeft: \"10px\" }}\n                        >\n                          <Image\n                            style={{ height: \"140px\", width: \"170px\" }}\n                            src={barCodeImage}\n                          ></Image>\n                        </Form.Item>\n                      </Row>\n                    </Col>\n                  </Row>\n\n                  \n                \n              </div>\n            </div>\n          </div>\n                </Panel>\n                <Panel header=\"Approve Budget\" key=\"5\">\n                \n                  <div>\n                  \n                    <div>\n                      <label>{kpiListData.kpiType}</label>\n                    </div>\n                    {/* <Form.Item name=\"printBudgetCheck\" valuePropName=\"checked\" noStyle>\n          <Checkbox onChange={onCheckChange}>Print Budget</Checkbox>\n        </Form.Item>\n        <Form.Item name=\"redemptionBudgetCheck\" valuePropName=\"checked\" noStyle>\n          <Checkbox>Redemption Budget</Checkbox>\n        </Form.Item>\n        <Form.Item name=\"totalBudgetCheck\" valuePropName=\"checked\" noStyle>\n          <Checkbox>Total Budget</Checkbox>\n        </Form.Item>\n        <Form.Item name=\"redemptionContributionCheck\" valuePropName=\"checked\" noStyle>\n          <Checkbox>Redemption Contribution</Checkbox>\n        </Form.Item>\n        <Form.Item name=\"trialCheck\" valuePropName=\"checked\" noStyle>\n          <Checkbox>Trial</Checkbox>\n        </Form.Item> */}\n                    <Form.Item \n                        name=\"kpiListCheckBoxes\"\n                        rules={[\n                          { required: true, message: \"Please input KPI List!\" },\n                        ]}>\n                    <Checkbox.Group\n                      options={kpiListData.options}\n                      onChange={onCheckChange}\n                    />\n                    </Form.Item>\n                  </div>\n                  <br></br>\n                  <div className=\"site-card-wrapper\">\n                    <Row gutter={16}>\n                      <Col span={6}>\n                      <div className=\"totoalContacts\">\n                          <label>Total Contacts</label>\n                        </div>\n                        <div className=\"site-card-wrapper\">\n                          <Row gutter={16}>\n                            <Col span={8}>\n                              <div>\n                                <label>Setup </label>\n                              </div>\n                              <div>\n                                <InputNumber disabled value={4233} />\n                              </div>\n                            </Col>\n                            <Col span={8}>\n                              <div>\n                                <label>Sold </label>\n                              </div>\n                              <div>\n                                <InputNumber value={2233} disabled />\n                              </div>\n                            </Col>\n                          </Row>\n                        </div>\n                      </Col>\n                      <Col span={6}>\n                      {/* <Form.Item name=\"printBudget\" valuePropName=\"visible\"> */}\n                        <div>\n                          <label>Print Budget In JPY</label>\n                        </div>\n                        <div className=\"site-card-wrapper\">\n                          <Row gutter={16}>\n                            <Col span={8}>\n                              <div>\n                                <label>Setup </label>\n                              </div>\n                              <div>\n                              <Form.Item \n                        name=\"setupPrintBudget\"\n                        rules={[\n                          { required: true, message: \"Required\" },\n                        ]}>\n                                <InputNumber\n                                  min={0}\n                                  max={10000}\n                                  step={10}\n                                  onChange={onChangeNumber}\n                                />\n                                </Form.Item>\n                              </div>\n                            </Col>\n                            <Col span={8}>\n                              <div>\n                                <label>Sold </label>\n                              </div>\n                              <div>\n                              <Form.Item \n                        name=\"soldPrintBudget\"\n                        rules={[\n                          { required: true, message: \"Required\" },\n                        ]}>\n                                <InputNumber\n                                  min={0}\n                                  max={10000}\n                                  step={10}\n                                  onChange={onChangeNumber}\n                                />\n                                </Form.Item>\n                              </div>\n                            </Col>\n                          </Row>\n                        </div>\n                        \n                        {/* </Form.Item> */}\n                        \n                      </Col>\n                      <Col span={6}>\n                        <div className=\"redemptionBudget\">\n                          <label>Redemption Budget In JPY</label>\n                        </div>\n                        <div className=\"site-card-wrapper\">\n                          <Row gutter={16}>\n                            <Col span={8}>\n                              <div>\n                                <label>Setup </label>\n                              </div>\n                              <div>\n                              <Form.Item \n                        name=\"setupRedemptionBudget\"\n                        rules={[\n                          { required: true, message: \"Required\" },\n                        ]}>\n                                <InputNumber\n                                  min={0}\n                                  max={10000}\n                                  step={10}\n                                  onChange={onChangeNumber}\n                                />\n                                </Form.Item>\n                              </div>\n                            </Col>\n                            <Col span={8}>\n                              <div>\n                                <label>Sold </label>\n                              </div>\n                              <div>\n                              <Form.Item \n                        name=\"soldRedemptionBudget\"\n                        rules={[\n                          { required: true, message: \"Required\" },\n                        ]}>\n                                <InputNumber\n                                  min={0}\n                                  max={10000}\n                                  step={10}\n                                  onChange={onChangeNumber}\n                                />\n                                </Form.Item>\n                              </div>\n                            </Col>\n                          </Row>\n                        </div>\n                      </Col>\n                    </Row>\n                    <br></br>\n                    <Row gutter={24}>\n                      <Col span={6}>\n                        <div className=\"totalBudget\">\n                          <label>Total Budget In JPY</label>\n                        </div>\n                        <div className=\"site-card-wrapper\">\n                          <Row gutter={16}>\n                            <Col span={8}>\n                              <div>\n                                <label>Setup </label>\n                              </div>\n                              <div>\n                              <Form.Item \n                        name=\"setupTotalBudget\"\n                        rules={[\n                          { required: true, message: \"Required\" },\n                        ]}>\n                                <InputNumber\n                                  min={0}\n                                  max={10000}\n                                  step={10}\n                                  onChange={onChangeNumber}\n                                />\n                                </Form.Item>\n                              </div>\n                            </Col>\n                            <Col span={8}>\n                              <div>\n                                <label>Sold </label>\n                              </div>\n                              <div>\n                              <Form.Item \n                        name=\"soldTotalBudget\"\n                        rules={[\n                          { required: true, message: \"Required\" },\n                        ]}>\n                                <InputNumber\n                                  min={0}\n                                  max={10000}\n                                  step={10}\n                                  onChange={onChangeNumber}\n                                />\n                                </Form.Item>\n                              </div>\n                            </Col>\n                          </Row>\n                        </div>\n                      </Col>\n                      <Col span={6}>\n                        <div className=\"redemptionContribution\">\n                          <label>Redemption Contribution in %</label>\n                        </div>\n                        <div className=\"site-card-wrapper\">\n                          <Row gutter={16}>\n                            <Col span={8}>\n                              <div>\n                                <label>Setup </label>\n                              </div>\n                              <div>\n                              <Form.Item \n                        name=\"setupRedemptionContributionPercent\"\n                        rules={[\n                          { required: true, message: \"Required\" },\n                        ]}>\n                                <InputNumber\n                                  min={0}\n                                  max={100}\n                                  step={1}\n                                  onChange={onChangeNumber}\n                                />\n                                </Form.Item>\n                              </div>\n                            </Col>\n                            <Col span={8}>\n                              <div>\n                                <label>Sold </label>\n                              </div>\n                              <div>\n                              <Form.Item \n                        name=\"soldRedemptionContributionPercent\"\n                        rules={[\n                          { required: true, message: \"Required\" },\n                        ]}>\n                                <InputNumber\n                                  min={0}\n                                  max={100}\n                                  step={1}\n                                  onChange={onChangeNumber}\n                                />\n                                </Form.Item>\n                              </div>\n                            </Col>\n                          </Row>\n                        </div>\n                      </Col>\n                      <Col span={6}>\n                        <div className=\"Trial\">\n                          <label>trial In JPY</label>\n                        </div>\n                        <div className=\"site-card-wrapper\">\n                          <Row gutter={16}>\n                            <Col span={8}>\n                              <div>\n                                <label>Setup </label>\n                              </div>\n                              <div>\n                              <Form.Item \n                        name=\"setupTrialBudget\"\n                        rules={[\n                          { required: true, message: \"Required\" },\n                        ]}>\n                                <InputNumber\n                                  min={0}\n                                  max={10000}\n                                  step={10}\n                                  onChange={onChangeNumber}\n                                />\n                                </Form.Item>\n                              </div>\n                            </Col>\n                            <Col span={8}>\n                              <div>\n                                <label>Sold </label>\n                              </div>\n                              <div>\n                              <Form.Item \n                        name=\"soldTrialBudget\"\n                        rules={[\n                          { required: true, message: \"Required\" },\n                        ]}>\n                                <InputNumber\n                                  min={0}\n                                  max={10000}\n                                  step={10}\n                                  onChange={onChangeNumber}\n                                />\n                                </Form.Item>\n                              </div>\n                            </Col>\n                          </Row>\n                        </div>\n                      </Col>\n                      <Col span={6}>\n                      <Row gutter={16}>\n                            <Col span={8}></Col>\n                            <Col span={8}>\n                        <Space>\n                          {/* <Button\n                            type=\"primary\"\n                            style={{ verticalAlign: \"End\", width: 80 }}\n                          >\n                            Previous\n                          </Button> */}\n\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                style={{ verticalAlign: \"End\", width: 80 }}\n                formNoValidate={true}\n              >\n                Approve\n              </Button>\n            </Form.Item>\n                        </Space>\n                        </Col>\n                        </Row>\n                        \n                      </Col>\n                    </Row>\n                  </div>\n                </Panel>\n              </Collapse>\n            </div>\n            </Form>\n          </div>\n        </Content>\n        <FooterComponent/>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Campaign;\n","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\campaignDetail\\campaignDetail.tsx",[],"C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\result\\result.tsx",["79","80","81"],"import React from \"react\";\nimport { Result, Space } from \"antd\";\nimport \"./result.scss\";\nimport {\n  Layout,\n  Menu,\n  Image,\n  Button,\n} from \"antd\";\nimport {\n  PlusCircleOutlined,\n  LinkedinOutlined,\n  GlobalOutlined,\n  FacebookOutlined,\n  BarChartOutlined,\n  LogoutOutlined,\n} from \"@ant-design/icons\";\nimport logoImage from \"../../Image/logo_white.png\";\nconst { Header, Footer, Sider, Content } = Layout;\n\nfunction campaignReturn(key: any) {\n  console.log(key);\n  window.location.href = \"/campaign\";\n}\n\nfunction returnReports(key: any) {\n  console.log(key);\n  window.location.href = \"/reports\";\n}\n\nfunction homeReturn(key: any) {\n  console.log(key);\n  window.location.href = \"/\";\n}\n\ninterface HomeProps {\n  message: string;\n  name: string;\n  isLoggedIn: boolean;\n}\n\nfunction ThankYouResult(props: HomeProps) {\n  return (\n    <Layout>\n      <Sider\n        breakpoint=\"lg\"\n        collapsedWidth=\"100\"\n        onBreakpoint={(broken) => {\n          console.log(broken);\n        }}\n        onCollapse={(collapsed, type) => {\n          console.log(collapsed, type);\n        }}\n      >\n        <div className=\"logo\">\n          <Image src={logoImage} />\n        </div>\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"4\"]}>\n        <Menu.Item\n            key=\"1\"\n            icon={<BarChartOutlined style={{ fontSize: \"20px\" }} />}\n            onClick={homeReturn}\n          >\n            Campaign Status\n          </Menu.Item>\n          <Menu.Item\n            key=\"2\"\n            icon={<PlusCircleOutlined style={{ fontSize: \"20px\" }} />}\n            onClick={campaignReturn}\n          >\n          Campaign Setup\n          </Menu.Item>\n          <Menu.Item\n            key=\"3\"\n            icon={<BarChartOutlined style={{ fontSize: \"20px\" }} />}\n            onClick={returnReports}\n          >\n            Reports\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header\n          className=\"site-layout-sub-header-background\"\n          style={{ background: \"White\", padding: 0 }}\n        >\n          <div>\n            <div className=\"ant-row\">\n              <div className=\"ant-col ant-col-4\"></div>\n              \n              <div className=\"ant-col ant-col-4\">\n                <div style={{ fontSize: \"20px\", textAlign: \"right\" }}>\n                  <a onClick={campaignReturn}>\n                    {<PlusCircleOutlined />}Campaign Setup\n                  </a>\n                </div>\n              </div>\n              <div className=\"ant-col ant-col-1\"></div>\n              <div className=\"ant-col ant-col-4\">\n              <div style={{ fontSize: \"20px\", textAlign: \"left\" }}>\n                  <a onClick={homeReturn}>{<BarChartOutlined />}Campaign Status</a>\n                </div>\n              </div>\n              <div className=\"ant-col ant-col-2\">\n                <div style={{ fontSize: \"20px\", textAlign: \"left\" }}>\n                  <a onClick={returnReports}>{<BarChartOutlined />}Reports</a>\n                </div>\n              </div>\n              <div className=\"ant-col ant-col-2\"></div>\n              <div\n                className=\"ant-col ant-col-6\"\n                style={{ fontSize: \"20px\", textAlign: \"end\" }}\n              >\n                {props.isLoggedIn && (\n                  <div className=\"home\">\n                    <div>\n                      {\" \"}\n                      {props.message}, {props.name} <Space/> \n                      <a href=\"/login\">{<LogoutOutlined disabled style={{ fontSize: \"20px\" }} />}</a>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </Header>\n        <Content style={{ margin: \"24px 16px 0\" }}>\n        <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 660 }}\n          >\n        <Result\n    status=\"success\"\n    title=\"Successfully Submitted the Campaign request\"\n    subTitle=\"Your campaign is created with Campaign ID: Camp_001_04_2020\"\n    extra={[\n      <Button type=\"primary\" key=\"console\" onClick={homeReturn}>\n        Home\n      </Button>,\n    ]}\n  />\n  </div>\n        </Content>\n        <Footer>\n          <div>\n            <div className=\"ant-row\">\n              <div className=\"ant-col ant-col-8\">\n                <div>\n                  <a\n                    href=\"https://www.linkedin.com/company/catalina-marketing-japan/\"\n                    style={{ fontSize: \"25px\" }}\n                  >\n                    {<LinkedinOutlined />}\n                  </a>\n                  <a\n                    href=\"https://www.facebook.com/catalinamkt.jp\"\n                    style={{ fontSize: \"25px\" }}\n                  >\n                    {<FacebookOutlined />}\n                  </a>\n                  <a\n                    href=\"https://catalina-jp.com/\"\n                    style={{ fontSize: \"25px\" }}\n                  >\n                    {<GlobalOutlined />}\n                  </a>\n                </div>\n              </div>\n              <div className=\"ant-col ant-col-8\" style={{ fontSize: \"15px\" }}>\n                ©Copyright 2020 Catalina. All rights reserved.\n              </div>\n            </div>\n          </div>\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default ThankYouResult;\n","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\campaign status\\campaign status.tsx",["82","83"],"import React, { useState } from \"react\";\nimport \"./campaign status.scss\";\nimport MenuComponent from \"../components/menuComponent\";\nimport HeaderComponent from \"../components/headerComponent\";\nimport FooterComponent from \"../components/footerComponent\";\nimport {\n  Layout,\n  Tooltip,\n  Select,\n  Statistic,\n  Card,\n  Row,\n  Col,\n  Button,\n  Table,\n  Space,\n  Form,\n} from \"antd\";\nimport {\n  RocketFilled,\n  StopOutlined,\n  SearchOutlined,\n  DownloadOutlined,\n} from \"@ant-design/icons\";\nimport { Input } from \"antd\";\nconst { Option } = Select;\n\nconst { Content } = Layout;\n\nconst data = [\n  {\n    key: \"1\",\n    campaignType: \"In-Store\",\n    createDate: \"01/09/2020\",\n    startDate: \"01/09/2020\",\n    endDate: \"01/10/2020\",\n    status: \"Active\",\n    campaignName: \"Camp_Aug01_2020\",\n  },\n  {\n    key: \"2\",\n    campaignType: \"In-Store\",\n    createDate: \"01/09/2020\",\n    startDate: \"01/09/2020\",\n    endDate: \"01/10/2020\",\n    status: \"Active\",\n    campaignName: \"Camp_Aug02_2020\",\n  },\n  {\n    key: \"3\",\n    campaignType: \"In-Store\",\n    createDate: \"01/09/2020\",\n    startDate: \"01/09/2020\",\n    endDate: \"01/10/2020\",\n    status: \"Expired\",\n    campaignName: \"Camp_Aug03_2020\",\n  },\n];\n\ninterface HomeProps {\n  message: string;\n  name: string;\n  isLoggedIn: boolean;\n}\n\nfunction CampaignStatus(props: HomeProps) {\n  // const [expand, setExpand] = useState(false);\n  // const [form] = Form.useForm();\n\n  const [dataSource, setDataSource] = useState(data);\n  const [value, setValue] = useState(\"\");\n\n  const columns = [\n    {\n      title: \"Campaign Key\",\n      dataIndex: \"key\",\n      key: \"key\",\n    },\n    {\n      title: \"Campaign Type\",\n      dataIndex: \"campaignType\",\n      key: \"campaignType\",\n    },\n    {\n      title: \"Create Date\",\n      dataIndex: \"createDate\",\n      key: \"createDate\",\n    },\n    {\n      title: \"Start Date\",\n      dataIndex: \"startDate\",\n      key: \"startDate\",\n    },\n    {\n      title: \"End Date\",\n      dataIndex: \"endDate\",\n      key: \"endDate\",\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n    },\n    {\n      title: \"Campaign Name\",\n      dataIndex: \"campaignName\",\n      key: \"campaignName\",\n      render: (text: React.ReactNode) => <a href=\"/campaignDetail\">{text}</a>,\n    },\n    {\n      title: \"Launch/Stop\",\n      dataIndex: \"launchStop\",\n      key: \"launchStop\",\n\n      render: (text: any, record: any) => (\n        // render: (text: React.ReactNode) => (\n        <Space size=\"middle\">\n          <a href=\"\">{<RocketFilled style={{ fontSize: \"20px\" }} />} /</a>\n          <a href=\"\"> {<StopOutlined style={{ fontSize: \"20px\" }} />}</a>\n        </Space>\n      ),\n    },\n  ];\n\n  function statusFilter(value: any) {\n    let filteredData: React.SetStateAction<\n      {\n        key: string;\n        campaignType: string;\n        createDate: string;\n        startDate: string;\n        endDate: string;\n        status: string;\n        campaignName: string;\n      }[]\n    > = [];\n    if (value.length === 0) {\n      setDataSource(data);\n    } else {\n      filteredData = data.filter((entry) => value.includes(entry.status));\n      setDataSource(filteredData);\n    }\n  }\n\n  function typeFilter(value: any) {\n    let filteredData: React.SetStateAction<\n      {\n        key: string;\n        campaignType: string;\n        createDate: string;\n        startDate: string;\n        endDate: string;\n        status: string;\n        campaignName: string;\n      }[]\n    > = [];\n    if (value.length === 0) {\n      setDataSource(data);\n    } else {\n      filteredData = data.filter((entry) => value.includes(entry.campaignType));\n      setDataSource(filteredData);\n    }\n  }\n\n  const onFinish = (values: any) => {\n    console.log(\"Received values from form: \", values);\n    // let filteredData: React.SetStateAction<{ key: string; campaignType: string; createDate: string; startDate: string; endDate: string; status: string; campaignName: string; }[]>=[];\n\n    //   filteredData = data.filter(entry =>\n    //       values.status.includes(entry.status)\n    //   );\n    //   setDataSource(filteredData);\n  };\n\n  return (\n    <Layout>\n      <MenuComponent />\n      <Layout>\n        <HeaderComponent isLoggedIn={true} message={\"Welcome\"} name={\"Admin\"} />\n        <Content style={{ margin: \"24px 16px 0\" }}>\n          <Form\n            name=\"form_controls\"\n            onFinish={onFinish}\n            initialValues={{\n              status: \"Active\",\n              type: \"In-Store\",\n              idName: \"\",\n            }}\n          >\n            <div\n              className=\"site-layout-background\"\n              style={{ padding: 24, minHeight: 660 }}\n            >\n              <div className=\"site-statistic-demo-card\">\n                <Row gutter={16}>\n                  <Col span={12}>\n                    <Card>\n                      <Statistic\n                        title=\"Active Campaigns\"\n                        value={91}\n                        precision={0}\n                        valueStyle={{ color: \"#3f8600\" }}\n                        // prefix={<ArrowUpOutlined />}\n                        // suffix=\"%\"\n                      />\n                    </Card>\n                  </Col>\n                  <Col span={12}>\n                    <Card>\n                      <Statistic\n                        title=\"Scheduled Campaigns\"\n                        value={17}\n                        precision={0}\n                        valueStyle={{ color: \"#cf1322\" }}\n                        // prefix={<ArrowDownOutlined />}\n                        // suffix=\"%\"\n                      />\n                    </Card>\n                  </Col>\n                </Row>\n              </div>\n              <br></br>\n\n              <div>\n                <Row gutter={16}>\n                  <Col span={6}>\n                    <div>Campaign Status</div>\n                  </Col>\n                  <Col span={6}>\n                    <div>Campaign Type</div>\n                  </Col>\n                  <Col span={6}></Col>\n                  <Col span={6}></Col>\n                </Row>\n              </div>\n              <div>\n                <Row gutter={16}>\n                  <Col span={6}>\n                    <div>\n                      <Form.Item name=\"status\">\n                        <Select\n                          mode=\"multiple\"\n                          style={{ width: \"100%\" }}\n                          placeholder=\"select campaign status\"\n                          onChange={statusFilter}\n                          optionLabelProp=\"label\"\n                        >\n                          <Option value=\"Active\" label=\"Active\">\n                            <div className=\"demo-option-label-item\">\n                              <span role=\"img\" aria-label=\"Active\">\n                                Active\n                              </span>\n                            </div>\n                          </Option>\n                          <Option value=\"Expired\" label=\"Expired\">\n                            <div className=\"demo-option-label-item\">\n                              <span role=\"img\" aria-label=\"Expired\">\n                                Expired\n                              </span>\n                            </div>\n                          </Option>\n                          <Option value=\"Scheduled\" label=\"Scheduled\">\n                            <div className=\"demo-option-label-item\">\n                              <span role=\"img\" aria-label=\"Scheduled\">\n                                Scheduled\n                              </span>\n                            </div>\n                          </Option>\n                        </Select>\n                      </Form.Item>\n                    </div>\n                  </Col>\n                  <Col span={6}>\n                    <div>\n                      <Form.Item name=\"type\">\n                        <Select\n                          mode=\"multiple\"\n                          style={{ width: \"100%\" }}\n                          placeholder=\"select campaign type\"\n                          onChange={typeFilter}\n                          optionLabelProp=\"label\"\n                        >\n                          <Option value=\"In-Store\" label=\"In-Store\">\n                            <div className=\"demo-option-label-item\">\n                              <span role=\"img\" aria-label=\"In-Store\">\n                                In-Store\n                              </span>\n                            </div>\n                          </Option>\n                          <Option value=\"Digital\" label=\"Digital\">\n                            <div className=\"demo-option-label-item\">\n                              <span role=\"img\" aria-label=\"Digital\">\n                                Digital\n                              </span>\n                            </div>\n                          </Option>\n                        </Select>\n                      </Form.Item>\n                    </div>\n                  </Col>\n                  <Col span={6}>\n                    <div>\n                      <Form.Item name=\"idName\">\n                        <Tooltip title=\"Search by ID/Name\">\n                          <Input\n                            placeholder=\"ID/Name\"\n                            value={value}\n                            onChange={(e) => {\n                              const currValue = e.target.value;\n                              setValue(currValue);\n                              const filteredData = data.filter((entry) =>\n                                entry.campaignName.includes(currValue)\n                              );\n                              setDataSource(filteredData);\n                            }}\n                          />\n                        </Tooltip>\n                      </Form.Item>\n                    </div>\n                  </Col>\n                  <Col span={1}></Col>\n\n                  <Col span={2}>\n                    <Form.Item>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        icon={<SearchOutlined />}\n                      >\n                        Search\n                      </Button>\n                    </Form.Item>\n                  </Col>\n                  <Col span={3}>\n                    <DownloadOutlined style={{ fontSize: \"30px\" }} />\n                  </Col>\n                </Row>\n              </div>\n              <br></br>\n              <Table columns={columns} dataSource={dataSource} />\n            </div>\n          </Form>\n        </Content>\n        <FooterComponent />\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default CampaignStatus;\n","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\reports\\reports.tsx",["84","85"],"import React from \"react\";\nimport \"./reports.scss\";\nimport MenuComponent from \"../components/menuComponent\";\nimport HeaderComponent from \"../components/headerComponent\";\nimport FooterComponent from \"../components/footerComponent\";\nimport { Layout, Card, Row, Col } from \"antd\";\n\nconst { Content } = Layout;\nconst salesData: { x: string; y: number }[] = [];\nfor (let i = 0; i < 12; i += 1) {\n  salesData.push({\n    x: `${i + 1}月`,\n    y: Math.floor(Math.random() * 1000) + 200,\n  });\n}\n\ninterface HomeProps {\n  message: string;\n  name: string;\n  isLoggedIn: boolean;\n}\n\nfunction Reports(props: HomeProps) {\n  return (\n    <Layout>\n      <MenuComponent />\n      <Layout>\n        <HeaderComponent isLoggedIn={true} message={\"Welcome\"} name={\"Admin\"} />\n        <Content style={{ margin: \"24px 16px 0\" }}>\n          <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 660 }}\n          >\n            <br />\n\n            <Row>\n              <Col span={24}>\n                <div\n                  style={{\n                    background: \"#c2f8ff\",\n                    padding: \"5px\",\n                    textAlign: \"center\",\n                    fontSize: \"20px\",\n                  }}\n                >\n                  History Of Print/Redeem\n                </div>\n              </Col>\n              <Col span={24}>\n                <iframe\n                  width=\"100%\"\n                  height=\"500\"\n                  src=\"https://app.powerbi.com/reportEmbed?reportId=80658d2b-d6ba-49f8-8437-b1cd56377f3f&autoAuth=true&ctid=2eddc39c-2996-4c2a-ab97-f767c39ea155&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLXVzLWVhc3QyLXJlZGlyZWN0LmFuYWx5c2lzLndpbmRvd3MubmV0LyJ9\"\n                ></iframe>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <div\n                  style={{\n                    background: \"#c2f8ff\",\n                    padding: \"5px\",\n                    textAlign: \"center\",\n                    fontSize: \"20px\",\n                  }}\n                >\n                  Results\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <div style={{ background: \"#ECECEC\", padding: \"5px\" }}>\n                  <Row\n                    gutter={16}\n                    style={{\n                      padding: \"5px\",\n                      textAlign: \"center\",\n                      fontSize: \"30px\",\n                    }}\n                  >\n                    <Col span={8}>\n                      <Card title=\"# Prints\" bordered={false}>\n                        100,000\n                      </Card>\n                    </Col>\n                    <Col span={8}>\n                      <Card title=\"# Redeem\" bordered={false}>\n                        10,000\n                      </Card>\n                    </Col>\n                    <Col span={8}>\n                      <Card title=\"Redemption Rate\" bordered={false}>\n                        10 %\n                      </Card>\n                    </Col>\n                  </Row>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <div style={{ background: \"#ECECEC\", padding: \"5px\" }}>\n                  <Row\n                    gutter={16}\n                    style={{\n                      padding: \"5px\",\n                      textAlign: \"center\",\n                      fontSize: \"30px\",\n                    }}\n                  >\n                    <Col span={8}>\n                      <Card title=\"¥ Prints\" bordered={false}>\n                        500,000\n                      </Card>\n                    </Col>\n                    <Col span={8}>\n                      <Card title=\"¥ Redeem\" bordered={false}>\n                        200,000\n                      </Card>\n                    </Col>\n                    <Col span={8}>\n                      <Card title=\"¥ Total\" bordered={false}>\n                        700,000\n                      </Card>\n                    </Col>\n                  </Row>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <div style={{ background: \"#ECECEC\", padding: \"5px\" }}>\n                  <Row\n                    gutter={16}\n                    style={{\n                      padding: \"5px\",\n                      textAlign: \"center\",\n                      fontSize: \"30px\",\n                    }}\n                  >\n                    <Col span={8}>\n                      <Card title=\"ROI\" bordered={false}>\n                        2.5\n                      </Card>\n                    </Col>\n                  </Row>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <div\n                  style={{\n                    background: \"#c2f8ff\",\n                    padding: \"5px\",\n                    textAlign: \"center\",\n                    fontSize: \"20px\",\n                  }}\n                >\n                  Sales Trend\n                </div>\n              </Col>\n              <Col span={24}>\n                <div>\n                  <iframe\n                    width=\"100%\"\n                    height=\"500\"\n                    src=\"https://app.powerbi.com/reportEmbed?reportId=d1203688-5eeb-498c-ab25-8164b97e16e0&autoAuth=true&ctid=2eddc39c-2996-4c2a-ab97-f767c39ea155&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLXVzLWVhc3QyLXJlZGlyZWN0LmFuYWx5c2lzLndpbmRvd3MubmV0LyJ9\"\n                  ></iframe>\n                </div>\n              </Col>\n            </Row>\n          </div>\n        </Content>\n        <FooterComponent />\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Reports;\n","C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\components\\menuComponent.tsx",[],"C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\components\\headerComponent.tsx",["86","87","88","89"],"C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\components\\footerComponent.tsx",[],"C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\components\\contentComponent.tsx",[],"C:\\Users\\ndubey\\Desktop\\React Retail\\react-ant-design\\src\\screens\\analyze\\analyze.tsx",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":9,"column":7,"nodeType":"96","messageId":"97","endLine":9,"endColumn":12},{"ruleId":"94","severity":1,"message":"98","line":27,"column":10,"nodeType":"96","messageId":"97","endLine":27,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":93,"column":15,"nodeType":"101","endLine":93,"endColumn":56},{"ruleId":"94","severity":1,"message":"102","line":3,"column":31,"nodeType":"96","messageId":"97","endLine":3,"endColumn":39},{"ruleId":"94","severity":1,"message":"103","line":26,"column":10,"nodeType":"96","messageId":"97","endLine":26,"endColumn":15},{"ruleId":"99","severity":1,"message":"104","line":93,"column":19,"nodeType":"101","endLine":93,"endColumn":47},{"ruleId":"99","severity":1,"message":"104","line":101,"column":19,"nodeType":"101","endLine":101,"endColumn":43},{"ruleId":"99","severity":1,"message":"104","line":106,"column":19,"nodeType":"101","endLine":106,"endColumn":46},{"ruleId":"99","severity":1,"message":"100","line":118,"column":11,"nodeType":"101","endLine":118,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":119,"column":11,"nodeType":"101","endLine":119,"endColumn":22},{"ruleId":"105","severity":1,"message":"106","line":50,"column":17,"nodeType":"101","endLine":54,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":166,"column":19,"nodeType":"101","endLine":170,"endColumn":20},{"ruleId":"99","severity":1,"message":"104","line":48,"column":19,"nodeType":"101","endLine":48,"endColumn":46},{"ruleId":"99","severity":1,"message":"104","line":53,"column":19,"nodeType":"101","endLine":53,"endColumn":47},{"ruleId":"99","severity":1,"message":"104","line":61,"column":19,"nodeType":"101","endLine":61,"endColumn":43},{"ruleId":"99","severity":1,"message":"104","line":66,"column":19,"nodeType":"101","endLine":66,"endColumn":46},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'redirectLogin' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Checkbox' is defined but never used.","'Width' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]